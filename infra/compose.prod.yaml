# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    labels:
      - traefik.http.routers.server.rule=Host(`api.arcanea.timotheedurand.fr`)
    image: ghcr.io/timothee-durand/arcanea-iim/back:main
    ports:
      - 3000:3000
    depends_on:
      redis:
        condition: service_healthy

  front:
    labels:
      - traefik.http.routers.front.rule=Host(`arcanea.timotheedurand.fr`)
    image: ghcr.io/timothee-durand/arcanea-iim/front:main
    environment:
      NODE_ENV: production
    ports:
      - 8081:80

  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    ports:
      # The HTTP port
      - "80:80"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
